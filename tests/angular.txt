import { Component } from '@angular/core';
import { OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterLink } from '@angular/router';

interface Product {
  id: string;
  name: string;
  image: string;
  details: string;
}

@Component({
  selector: 'app-product-page',
  standalone: true,
  imports: [CommonModule, RouterLink],
  templateUrl: './product-page.component.html',
  styleUrls: ['./product-page.component.css']
})
export class ProductPageComponent implements OnInit {
  defaultProducts: Product[] = [
    {
      id: 'Prodect one',
      name: 'منتجات غذائية',
      image: 'assets/food products.png',
      details: 'لدينا أفضل النتجات الغذائية و بأفضل الاسعار من أفضل الماركات العالمية والمحلية',
    },
    {
      id: 'Prodect two',
      name: 'منتجات تجميلية',
      image: 'assets/cosmetic products.png',
      details: 'أفضل أنواع العطورات والمنتجات التجميلية رائحة ونعومة معاً',
    },
    {
      id: 'Prodect three',
      name: 'بيتزا الكوخ',
      image: 'assets/pizza.png',
      details: 'بيتزا خضار مع الدجاج جميع الاحجام وحسب الطلب',
    },
    {
      id: 'Prodect four',
      name: 'سلطة خضار',
      image: 'assets/salad.png',
      details: 'سلطات خضار مع الزيت البلدي',
    },
    {
      id: 'Prodect five',
      name: 'سندويش',
      image: 'assets/sandwich.png',
      details: 'لدينا كل أنواع السندويش غربي وشرقي وجاهزون لكافة الطلبات أهلا بكم في مطعمكم',
    },
    {
      id: 'Prodect Six',
      name: 'حساء',
      image: 'assets/soup.png',
      details: 'حساء بجميع أنواعه وحسب الطلب',
    },
  ];

  products: Product[] = [];
  selectedProduct: Product | null = null;

    selectProduct(product: Product) {
    this.selectedProduct = product;
  }

  ngOnInit(): void {
  if (typeof window !== 'undefined' && typeof localStorage !== 'undefined') {
    const saved = JSON.parse(localStorage.getItem('products') || '[]')
    const validSaved = saved.filter((pp:any) => {pp?.id && pp?.name && pp?.image && pp?.details})
    this.products = [...this.defaultProducts, ...validSaved];
  } else
    this.products = [...this.defaultProducts];

}




  deleteProduct(index: number) {
  const removed = this.products.splice(index, 1)
  if (typeof window !== 'undefined' && typeof localStorage !== 'undefined') {
    const currentSaved = JSON.parse(localStorage.getItem('products') || '[]')
    const UpdatedSaved = currentSaved.filter((pp: any) => {pp.id !== removed.id})
    localStorage.setItem('products', JSON.stringify(UpdatedSaved))
  }

  if (this.selectedProduct?.id === removed.id) {
    this.selectedProduct = null;
  }
}

}
